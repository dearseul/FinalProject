단위 테스트란, 구현 단계에서 각 모듈의 개발을 완료한 후 특정 모듈이 의도된대로 정확히 작동하는지 검증하는 절차이다.
즉, 개별 모듈이 제대로 구현되어 정해진 기능을 정확히 수행하는지 테스트 하는 것이다.
단위 테스트는 개발된 모듈만 테스트 하기 때문에 테스트할 모듈을 호출하는 모듈, 테스트할 모듈이 호출하는 모듈이 모두 존재해야 정확한 테스트가 가능하다.
만일 특정 모듈을 테스트 할 때 상,하위 모듈이 개발이 되지 않았을 경우 가상의 상.하위 모듈을 만들어 사용한다.
또한 단위 테스트는 개발자 본인 뿐만 아니라 심도있는 테스트를 위해 테스터에 의해 수행되기도 한다.
단위테스트의 장점으로는 프로그램 개발 시 문제점을 조기에 발견하여 잘못된 부분을 신속히 확인할수 있으며, 변경이 용이하다.
이로 인하여 프로그램을 비교적 에러발생 없이 통합할 수 있다.

통합 테스트란, 단위 테스트가 끝난 모듈을 통합하는 단계에서 수행하는 테스트로 이 과정에서 발생할 수 있는 오류를 찾는 것이다.
단위 테스트에서 오류가 발생하지 않았더라도, 여러 모듈이 개별적이 아닌 유기적 관계를 맺고 있으므로 통합 시 상호간의 공유 데이터 구조 등에서 오류가 발생할 수 있기 때문이다.
통합테스트를 하는 방법으로는 모듈 통합을 한번에 하는 방법과 점진적으로 하는 방법이 있다.
통합을 한번에 하는 방법은 주로 소규모 프로그램이나 프로그램의 일부를 대상으로 하는 경우에 적합하다. 하지만 이 방법은 오류가 발생했을 시 오류의 존재, 원인을 찾기가 매우 어렵다.
점진적으로 하는 방법은 위의 방법의 문제점을 개선하는 방법으로, 모듈의 계층 구조에서 최상위 모듈부터 시작하여 하위 모듈방향으로 통합하는 하향식 기법,
최하위 모듈부터 테스트를 시작하는 상향식 기법이 있다. 
하향식 기법은 프로그램 전체에 영향을 줄 수 있는 오류를 사전에 발견하기 쉬운 장점이 있지만 하위 모듈이 임시로 만들어져있는 경우 정확한 결과를 얻기 힘들다는 단점이 있다.
상향식 기법은 최하위 모듈부터 충분한 테스트를 할수 있으므로 비교적 정확한 결과를 얻을 수 있다.