<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >   
   
<mapper namespace="pms.dao.TaskDetailDao">
<!-- SELECT a.* , b.name, c.project_name
FROM project_task a, pms_member b, pms_project c
WHERE a.task_no = 1000
AND a.project_no = c.project_no
AND a.pno = b.pno; -->
	<!-- public Task taskDetail(int task_no);  -->
	<select id="taskDetail" resultType="task" parameterType="int">
		SELECT a.* , b.name, c.project_name
		FROM project_task a, pms_member b, pms_project c
		WHERE a.task_no = #{task_no}
		AND a.project_no = c.project_no
		AND a.pno = b.pno
	</select>
	<!-- public ArrayList<Task> subtaskList(int task_no); -->
	<select id="subtaskList" resultType="task" parameterType="int">
		SELECT a.* , b.name
		FROM project_task a, pms_member b
		WHERE task_parent_no =#{task_no}
		AND a.pno = b.pno
		ORDER BY task_no
	</select>
	
	<!-- public int taskcurrval(); --> <!--  현재 task_no sequnce번호 확인을 위한 sql -->
	<select id="taskcurrval" resultType="int">
		SELECT 
		LAST_NUMBER
		FROM 
		USER_SEQUENCES 
		WHERE 
		SEQUENCE_NAME = 'TASK_NO_SEQ'
	</select>
	
	<!-- public void insertSubtask(Task t); -->
	<insert id="insertSubtask" parameterType="task">
		INSERT INTO project_task 
		values(#{pno},#{project_no},task_no_seq.nextval,#{task_name},'내용',#{task_priority},#{task_parent_no},
			#{startdte},#{enddte},'진행')
	</insert>
	
	<!-- public ArrayList<Task> showMember(int task_no); -->
	<select id="showMember" resultType="task" parameterType="int">
		SELECT DISTINCT c.pno, c.name
		FROM pms_member_project a, project_task b, pms_member c 
		WHERE b.project_no = a.project_no 
		AND b.task_no= #{task_no}
		AND a.pno = c.pno
		ORDER BY name
	</select>
	
	<!-- public void updateTask(Task t); // 태스크 수정  -->
	<update id="updateTask" parameterType="task">
		UPDATE 	project_task 
		SET task_name = #{task_name},
			pno = #{pno},
			task_content = #{task_content},
			task_priority = #{task_priority},
			startdte=#{startdte},
			enddte = #{enddte}
		WHERE task_no = #{task_no}
	</update>
	
	<!-- public void updateSub(Task t); -->
	<update id="updateSub" parameterType="task">
		UPDATE project_task
		SET pno=#{pno},
			task_name=#{task_name},
			TASK_PRIORITY =#{task_priority},
			startdte=#{startdte},
			enddte=#{enddte}
		WHERE task_no=#{task_no}
	</update>
	
	
	<!-- public ArrayList<Comment> commentList(int task_no); -->
	<select id="commentList" resultType="comment" parameterType="int">
		SELECT a.*, b.name 
		FROM task_comment a, pms_member b
		WHERE a.pno = b.pno
		AND task_no=#{task_no}
		ORDER BY regdte
	</select>
	
	<!-- public void insertComment(Comment com); -->
	<insert id="insertComment" parameterType="comment">
		INSERT INTO task_comment values(task_comment_seq.nextval,#{task_no},#{content},
		to_char(sysdate+9/24,'yyyy-MM-dd HH24:MI:SS'),#{pno})
	</insert>
	
	
	<!-- public void deleteSub(int task_no); -->
	<delete id="deleteSub" parameterType="int">
		DELETE FROM project_task
		WHERE task_no = #{task_no}
	</delete>
	
	<!-- public void deleteTask(int task_no); // 태스크 삭제  -->
	<delete id="deleteTask" parameterType="int">
		DELETE FROM project_task
		WHERE task_no = #{task_no}
	</delete>
	
	<!-- public void deletecomm(int comment_no);// 커멘트 삭제  -->
	<delete id="deletecomm" parameterType="int">
		DELETE FROM task_comment
		WHERE comment_no = #{comment_no}
	</delete>
	
	<!-- public void requestApp(int task_no); // 태스크 승인 요청  -->
	<update id="requestApp" parameterType="int">
		UPDATE project_task
		SET task_status='요청'
	    WHERE task_no=#{task_no}
	</update>
	
	<!-- public void approval(int task_no); // 태스크 완료 승인 . -->
	<update id="approval"  parameterType="int">
		UPDATE project_task 
		SET task_status='완료'
		WHERE task_no = #{task_no} OR task_parent_no=#{task_no}
	</update>
	
	<!-- public void statusToDone(int task_no); // 완료로 상태 변경 
	public void statusFromDone(int task_no); // 진행으로 상태 변경  -->
	<update id="statusToDone"  parameterType="int">
		UPDATE project_task
		SET task_status='완료'
		WHERE task_no=#{task_no}
	</update>
	<update id="statusFromDone"  parameterType="int">
		UPDATE project_task
		SET task_status='진행'
		WHERE task_no=#{task_no}
	</update>
	
	<!-- INSERT INTO task_file values(1,1000,'파일명','task_upload',sysdate); -->
	<!-- public void insertTaskFile(taskFile tf); // 파일업로드 -->
	<insert id="insertTaskFile" parameterType="taskfile">
		INSERT INTO task_file values(taskfile_seq.nextval,#{name},#{task_no},#{filename},#{filepath},sysdate)
	</insert>
	
	<!-- select * from task_file where task_no=1000 -->
	<!-- public ArrayList<TaskFile> getTaskFile(int task_no); -->
	<select id="getTaskFile" parameterType="int" resultType="taskfile">
		select * from task_file where task_no=#{task_no}
	</select>
	
	<!-- public ArrayList<TaskFile> taskFileList(int task_no); -->
	<select id="taskFileList" parameterType="int" resultType="taskfile">
		select * from task_file where task_no=#{task_no}
	</select>
	
	<!-- DELETE FROM task_file WHERE fileno=5 -->
	<!-- public void deleteTaskFile(int fileno); -->
	<delete id="deleteTaskFile" parameterType="int">
		DELETE FROM task_file WHERE fileno=#{fileno} 
	</delete>
</mapper>  
 